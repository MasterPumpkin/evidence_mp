# Generated by Django 5.1.4 on 2025-01-11 11:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_milestone'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScoringScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(help_text='Školní rok, např. 2024/2025', max_length=20, unique=True)),
                ('leader_area1_max', models.PositiveIntegerField(default=15)),
                ('leader_area2_max', models.PositiveIntegerField(default=10)),
                ('leader_area3_max', models.PositiveIntegerField(default=15)),
                ('opponent_area1_max', models.PositiveIntegerField(default=15)),
                ('opponent_area2_max', models.PositiveIntegerField(default=15)),
                ('active', models.BooleanField(default=False, help_text='Je toto schéma aktuálně používané?')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='internal_notes',
            field=models.TextField(blank=True, help_text='Poznámky viditelné pouze pro vedoucího (WYSIWYG)'),
        ),
        migrations.CreateModel(
            name='ControlCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Datum kontroly')),
                ('content', models.TextField(help_text='Co bylo náplní kontroly')),
                ('evaluation', models.CharField(blank=True, help_text='Hodnocení / body / slovní', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='LeaderEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area1_text', models.TextField(blank=True, help_text='Popis hodnocení (oblast 1)')),
                ('area1_points', models.PositiveIntegerField(default=0)),
                ('area2_text', models.TextField(blank=True, help_text='Popis hodnocení (oblast 2)')),
                ('area2_points', models.PositiveIntegerField(default=0)),
                ('area3_text', models.TextField(blank=True, help_text='Popis hodnocení (oblast 3)')),
                ('area3_points', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='leader_eval', to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='OpponentEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area1_text', models.TextField(blank=True, help_text='Popis hodnocení (oblast 1)')),
                ('area1_points', models.PositiveIntegerField(default=0)),
                ('area2_text', models.TextField(blank=True, help_text='Popis hodnocení (oblast 2)')),
                ('area2_points', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='opponent_eval', to='projects.project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='scheme',
            field=models.ForeignKey(blank=True, help_text='Scoring schema pro tento projekt (podle školního roku)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.scoringscheme'),
        ),
    ]
